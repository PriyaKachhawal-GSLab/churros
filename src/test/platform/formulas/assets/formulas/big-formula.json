{
    "description": "When a contact or lead is added to a campaign in Salesforce a user is added to the corresponding list in Sailthru",
    "createdDate": "2015-10-12T18:49:42Z",
    "steps": [
        {
            "onSuccess": [
                "2-create-filter-step"
            ],
            "onFailure": [],
            "name": "1-campaignMember-filter-step",
            "type": "filter",
            "properties": {
                "body": "var object = trigger.body.message.events[0].objectType;\nif (object.toUpperCase() == 'CAMPAIGNMEMBER'){ done(true); } else { done(false); }"
            }
        },
        {
            "onSuccess": [
                "3-get-campaignMember"
            ],
            "onFailure": [],
            "name": "2-create-filter-step",
            "type": "filter",
            "properties": {
                "body": "var action = trigger.body.message.events[0].eventType;\nif (action.toUpperCase() == 'CREATED'){ done(true); } else { done(false); }"
            }
        },
        {
            "onSuccess": [
                "4-get-campaign"
            ],
            "onFailure": [],
            "name": "3-get-campaignMember",
            "type": "elementRequest",
            "properties": {
                "method": "GET",
                "api": "/hubs/crm/CampaignMember/{objectId}",
                "path": "${trigger.body.message.events[0]}",
                "elementInstanceId": "${sfdc.instance.id}"
            }
        },
        {
            "onSuccess": [
                "5-trans-obj-name"
            ],
            "onFailure": [],
            "name": "4-get-campaign",
            "type": "elementRequest",
            "properties": {
                "method": "GET",
                "api": "/hubs/crm/campaigns/{CampaignId}",
                "path": "${3-get-campaignMember.response.body}",
                "elementInstanceId": "${sfdc.instance.id}"
            }
        },
        {
            "onSuccess": [
                "6-get-object"
            ],
            "onFailure": [],
            "name": "5-trans-obj-name",
            "type": "script",
            "properties": {
                "body": "var member = steps['3-get-campaignMember'].response.body; var transObject; var objectId; if(member.LeadId){transObject = 'leads'; objectId = member.LeadId;} \n else if (member.ContactId){transObject = 'contacts';  objectId = member.ContactId;} \n done({'objectId': objectId, 'objectName': transObject});"
            }
        },
        {
            "onSuccess": [
                "7-synchable-st-id-filter"
            ],
            "onFailure": [],
            "name": "6-get-object",
            "type": "elementRequest",
            "properties": {
                "method": "GET",
                "api": "/hubs/crm/{objectName}/{objectId}",
                "path": "${5-trans-obj-name}",
                "elementInstanceId": "${sfdc.instance.id}"
            }
        },
        {
            "onSuccess": [
                "7-2-get-st-user-id"
            ],
            "onFailure": [],
            "name": "7-synchable-st-id-filter",
            "type": "filter",
            "properties": {
                "body": "done(steps['6-get-object'].response.body[config.synchableFieldName] && steps['6-get-object'].response.body[config.stIdFieldName] && steps['4-get-campaign'].response.body[config.synchableFieldName]);"
            }
        },
        {
            "onSuccess": [
                "8-sailthru-id-filter"
            ],
            "onFailure": [],
            "name": "7-2-get-st-user-id",
            "type": "script",
            "properties": {
                "body": "done({'stUserId': steps['6-get-object'].response.body[config.stIdFieldName]});"
            }
        },
        {
            "onSuccess": [
                "8-2-get-st-list-id"
            ],
            "onFailure": [
                "10-1-st-update-body"
            ],
            "name": "8-sailthru-id-filter",
            "type": "filter",
            "properties": {
                "body": "if(steps['4-get-campaign'].response.body[config.stIdFieldName]){ done(true); } done(false);"
            }
        },
        {
            "onSuccess": [
                "9-1-get-st-list"
            ],
            "onFailure": [],
            "name": "8-2-get-st-list-id",
            "type": "script",
            "properties": {
                "body": "done({'stListId': steps['4-get-campaign'].response.body[config.stIdFieldName]});"
            }
        },
        {
            "onSuccess": [
                "9-2-st-update-body"
            ],
            "onFailure": [],
            "name": "9-1-get-st-list",
            "type": "elementRequest",
            "properties": {
                "method": "GET",
                "api": "/hubs/marketing/lists/{stListId}",
                "path": "${8-2-get-st-list-id}",
                "elementInstanceId": "${sailthru.instance.id}"
            }
        },
        {
            "onSuccess": [
                "9-3-add-user-to-list"
            ],
            "onFailure": [],
            "name": "9-2-st-update-body",
            "type": "script",
            "properties": {
                "body": "var name = steps['9-1-get-st-list'].response.body.list; var lists = {}; lists[name] = 1; done({'lists': lists});"
            }
        },
        {
            "onSuccess": [],
            "onFailure": [],
            "name": "9-3-add-user-to-list",
            "type": "elementRequest",
            "properties": {
                "method": "PATCH",
                "body": "${9-2-st-update-body}",
                "api": "/hubs/marketing/users/{stUserId}",
                "path": "${7-2-get-st-user-id}",
                "elementInstanceId": "${sailthru.instance.id}"
            }
        },
        {
            "onSuccess": [
                "10-2-add-user-to-list"
            ],
            "onFailure": [],
            "name": "10-1-st-update-body",
            "type": "script",
            "properties": {
                "body": "var name = steps['4-get-campaign'].response.body.Name; var lists = {}; lists[name] = 1; done({'lists': lists});"
            }
        },
        {
            "onSuccess": [
                "10-3-build-find-list-body"
            ],
            "onFailure": [],
            "name": "10-2-add-user-to-list",
            "type": "elementRequest",
            "properties": {
                "method": "PATCH",
                "body": "${10-1-st-update-body}",
                "api": "/hubs/marketing/users/{stUserId}",
                "path": "${7-2-get-st-user-id}",
                "elementInstanceId": "${sailthru.instance.id}"
            }
        },
        {
            "onSuccess": [
                "10-4-find-list"
            ],
            "onFailure": [],
            "name": "10-3-build-find-list-body",
            "type": "script",
            "properties": {
                "body": "done({'where': \"list='\" + steps['4-get-campaign'].response.body.Name + \"'\"});"
            }
        },
        {
            "onSuccess": [
                "10-5-build-campaign-body"
            ],
            "onFailure": [],
            "name": "10-4-find-list",
            "type": "elementRequest",
            "properties": {
                "method": "GET",
                "query": "${10-3-build-find-list-body}",
                "api": "/hubs/marketing/lists",
                "elementInstanceId": "${sailthru.instance.id}"
            }
        },
        {
            "onSuccess": [
                "10-6-update-campaign"
            ],
            "onFailure": [],
            "name": "10-5-build-campaign-body",
            "type": "script",
            "properties": {
                "body": "var key = config.stIdFieldName; var body = {}; body[key] = steps['10-4-find-list'].response.body[0].list_id; done(body);"
            }
        },
        {
            "onSuccess": [],
            "onFailure": [],
            "name": "10-6-update-campaign",
            "type": "elementRequest",
            "properties": {
                "method": "PATCH",
                "body": "${10-5-build-campaign-body}",
                "api": "/hubs/crm/campaigns/{CampaignId}",
                "path": "${3-get-campaignMember.response.body}",
                "elementInstanceId": "${sfdc.instance.id}"
            }
        }
    ],
    "triggers": [
        {
            "type": "event",
            "onSuccess": [
                "1-campaignMember-filter-step"
            ],
            "onFailure": [],
            "properties": {
                "elementInstanceId": "${sfdc.instance.id}"
            }
        }
    ],
    "configuration": [
        {
            "key": "sfdc.instance.id",
            "name": "sfdcInstance",
            "type": "elementInstance",
            "description": "The SFDC CRM element instance"
        },
        {
            "key": "sailthru.instance.id",
            "name": "sailthruInstance",
            "type": "elementInstance",
            "description": "The Sailthru marketing element instance"
        },
        {
            "key": "synchableFieldName",
            "name": "synchableFieldName",
            "type": "value",
            "description": "The Salesforce 'ST synchable' API field name"
        },
        {
            "key": "stIdFieldName",
            "name": "stIdFieldName",
            "type": "value",
            "description": "The Salesforce 'ST id' API field name"
        },
        {
            "key": "notification.email",
            "name": "Notification Email",
            "type": "value",
            "description": "Optional email where formula errors and notification steps will be sent"
        }
    ]
}
