{
	"name": "Kissmetrics Events/Props",
	"description": "When a specified field is changed on the initiating system, a property is set or an event is fired in Kissmetrics",
	"steps": [{
		"onSuccess": ["5_has_field_changed"],
		"onFailure": ["10_need_to_update"],
		"name": "4_loop_over_monitored_fields",
		"type": "loop",
		"properties": {
			"list": "${config.monitoredFields}"
		}
	}, {
		"name": "10_need_to_update",
		"type": "filter",
		"properties": {
			"body": "function isEmpty(object) {\n  for(var key in object) {\n    if(object.hasOwnProperty(key)){\n      return false;\n    }\n  }\n  return true;\n}\n\ndone(steps['9_endpoint_update_body'] != null && !isEmpty(steps['9_endpoint_update_body'].body));",
			"mimeType": "application/javascript"
		}
	}, {
		"onSuccess": ["4_loop_over_monitored_fields"],
		"name": "9_endpoint_update_body",
		"type": "script",
		"properties": {
			"body": "var body;\nif (steps['9_endpoint_update_body']) {\n  body = steps['9_endpoint_update_body'].body;\n} else {\n  body = {}\n}\n\nvar ceFieldName = steps['4_loop_over_monitored_fields'].entry.ceFieldName;\nif(ceFieldName != null){\n  body[ceFieldName] = steps['3_get_object'].response.body[steps['4_loop_over_monitored_fields'].entry.monitoredFieldName];\n}\n\ndone({\n  body: body\n});\n",
			"mimeType": "application/javascript"
		}
	}, {
		"onSuccess": ["8_km_request"],
		"onFailure": ["9_endpoint_update_body"],
		"name": "7_anything_to_post",
		"type": "filter",
		"properties": {
			"body": "done(steps['6_km_request_details'].kmRequest);"
		}
	}, {
		"onSuccess": ["7_anything_to_post"],
		"name": "6_km_request_details",
		"type": "script",
		"properties": {
			"body": "var kmRequest = false;\nvar body = {};\nvar path;\n\n//Do they want to process an event? \nif (steps['4_loop_over_monitored_fields'].entry.kmEventName != null) {\n  var desiredEventFieldValue = steps['4_loop_over_monitored_fields'].entry.fieldValueForEvent;\n  var eventFieldValue = steps['3_get_object'].response.body[steps['4_loop_over_monitored_fields'].entry.monitoredFieldName];\n  \n  // Has the event happened? \n  if (eventFieldValue === desiredEventFieldValue) {\n    kmRequest = true;\n    path = 'recorded-events';\n    \n    //prepare post data for an event\n    body['_p'] =steps['3_get_object'].response.body[config.uniqueIdFieldName];\n    body['_n'] = steps['4_loop_over_monitored_fields'].entry.kmEventName;\n      \n    //Do they also want to process a property? \n    if (steps['4_loop_over_monitored_fields'].entry.kmPropertyName != null) {\n      //add post data for a property\n      var kmField = steps['4_loop_over_monitored_fields'].entry.kmPropertyName;\n      body[kmField] = steps['3_get_object'].response.body[steps['4_loop_over_monitored_fields'].entry.monitoredFieldName];\n      \n    }\n    \n    done({\n      kmRequest: kmRequest,\n      body: body,\n      path: path\n    });\n    \n  }\n}\n\n//If we are here, then either they don't want to process an event, or the event hasn't happened\n//Do they want to process a property?\nif (steps['4_loop_over_monitored_fields'].entry.kmPropertyName != null) {\n  kmRequest = true;\n  path = 'properties';\n  body['_p'] = steps['3_get_object'].response.body[config.uniqueIdFieldName];\n  \n  var kmField = steps['4_loop_over_monitored_fields'].entry.kmPropertyName;\n  body[kmField] = steps['3_get_object'].response.body[steps['4_loop_over_monitored_fields'].entry.monitoredFieldName];\n\n}\n\ndone({\n  kmRequest: kmRequest,\n  body: body,\n  path: path\n});\n\n",
			"mimeType": "application/javascript"
		}
	}, {
		"onSuccess": ["3_get_object"],
		"name": "2_request_variables",
		"type": "script",
		"properties": {
			"body": "done({\n  body: {\n    objectId: trigger.event.objectId,\n    objectType: trigger.event.objectType,\n    hubName: config.hubName\n  },\n  headers: {\n    'Sforce-Auto-Assign': 'false'\n  }\n});",
			"mimeType": "application/javascript"
		}
	}, {
		"onSuccess": ["4_loop_over_monitored_fields"],
		"name": "3_get_object",
		"type": "script",
		"properties": {
			"body": "done({response: {body: {Email: 'myEmail@email.com', FirstName: 'first', CE_First_Name__c: 'different first'}}})",
			"mimeType": "application/javascript"
		}
	}, {
		"onSuccess": ["2_request_variables"],
		"name": "1_1_is_created_updated",
		"type": "filter",
		"properties": {
			"body": "done(trigger.event.eventType.toLowerCase() === 'created' || trigger.event.eventType.toLowerCase() === 'updated');",
			"mimeType": "application/javascript"
		}
	}, {
		"onSuccess": ["1_1_is_created_updated"],
		"name": "1_is_monitored_object",
		"type": "filter",
		"properties": {
			"body": "done(trigger.event.objectType.toLowerCase() === config.objectName.toLowerCase());",
			"mimeType": "application/javascript"
		}
	}, {
		"onSuccess": ["6_km_request_details"],
		"onFailure": ["4_loop_over_monitored_fields"],
		"name": "5_has_field_changed",
		"type": "filter",
		"properties": {
			"body": "var monitoredFieldName = steps['4_loop_over_monitored_fields'].entry.monitoredFieldName;\nvar ceFieldName = steps['4_loop_over_monitored_fields'].entry.ceFieldName;\n\nvar monitoredFieldValue = steps['3_get_object'].response.body[monitoredFieldName];\nvar ceFieldValue = steps['3_get_object'].response.body[ceFieldName];\n\ndone(monitoredFieldValue != ceFieldValue);",
			"mimeType": "application/javascript"
		}
	}, {
		"onSuccess": ["9_endpoint_update_body"],
		"name": "8_km_request",
		"type": "elementRequest",
		"properties": {
			"body": "${steps.6_km_request_details.body}",
			"elementInstanceId": "${config.kissmetricsInstanceId}",
			"retryAttempts": "3",
			"api": "/hubs/marketing/${steps.6_km_request_details.path}",
			"retry": "true",
			"method": "POST",
			"retryDelay": "500"
		}
	}],
	"triggers": [{
		"onSuccess": ["1_is_monitored_object"],
		"type": "event",
		"name": "trigger",
		"properties": {
			"elementInstanceId": "${config.sourceInstanceId}"
		}
	}],
	"active": true,
	"singleThreaded": false,
	"configuration": [{
		"id": 3396,
		"key": "sourceInstanceId",
		"name": "sourceInstanceId",
		"type": "elementInstance",
		"description": "The element instance ID of the endpoint to monitor.",
		"required": true
	}, {
		"id": 3397,
		"key": "hubName",
		"name": "hubName",
		"type": "value",
		"description": "The hub name (i.e. crm) of the endpoint to monitor.",
		"required": true
	}, {
		"id": 3398,
		"key": "kissmetricsInstanceId",
		"name": "kissmetricsInstanceId",
		"type": "elementInstance",
		"description": "The Kissmetrics instance id.",
		"required": true
	}, {
		"id": 3394,
		"key": "monitoredFields",
		"name": "monitoredFields",
		"type": "value",
		"description": "A JSON list of fields to monitored in the following format: [{ \"monitoredFieldName\": \"required\", \"ceFieldName\": \"required\", \"kmPropertyName\": \"optional\", \"kmEventName\": \"optional\", \"fieldValueForEvent\": \"required if kmEventName is set\"}]. Where ceFIeldName is the custom field used to track changes of the monitored field, kmPropertyName is the name of the property to create in Kissmetrics, kmEventName is the name of the event to create in Kissmetrics and fieldValueForEvent is the value of monitoredFieldName for which to create the event.",
		"required": true
	}, {
		"id": 3399,
		"key": "objectName",
		"name": "objectName",
		"type": "value",
		"description": "The object name (i.e. Contact or Lead) of the object to monitor.",
		"required": true
	}, {
		"id": 3395,
		"key": "uniqueIdFieldName",
		"name": "uniqueIdFieldName",
		"type": "value",
		"description": "The API name of the unique ID field. This is typically an email address, but should be whatever field used as the unique identifier in Kissmetrics.",
		"required": true
	}]
}