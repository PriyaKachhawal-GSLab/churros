{
    "name": "bulk2sfdc",
    "steps": [
      {
        "onSuccess": [
          "fileStream"
        ],
        "name": "buildStreamHeaders",
        "type": "script",
        "properties": {
          "body": "done({\n  'Accept': \"text/csv\"\n});"
        }
      },
      {
        "onSuccess": [
          "putConfigs-retry"
        ],
        "onFailure": [
          "errorNotice"
        ],
        "name": "counter-filter",
        "type": "filter",
        "properties": {
          "body": "if(config.counter >= 3){\n  done(false);\n} else{\n  done(true);\n}"
        }
      },
      {
        "onSuccess": [
          "put-counter-update-clone"
        ],
        "name": "counter-to-zero-body",
        "type": "script",
        "properties": {
          "body": "var obj = steps.returnId;\n\ndone({\"active\" : obj['2active'],\n      \"configuration\": {\n      \"counter\": 0,\n      \"sfdc.instance.id\": obj.sfdcinstanceid,\n      \"lithiumlsw.instance.id\": obj.lithiuminstanceid,\n      \"email\": config.email\n      },\n      \"name\":obj['2name']});\n"
        }
      },
      {
        "onSuccess": [
          "put-counter-update"
        ],
        "name": "counter-update-body",
        "type": "script",
        "properties": {
          "body": "var obj = steps.returnId;\n\ndone({\"active\" : obj['2active'],\n      \"configuration\": {\n      \"counter\": config.counter + 1,\n      \"sfdc.instance.id\": obj.sfdcinstanceid,\n      \"lithiumlsw.instance.id\": obj.lithiuminstanceid,\n      \"email\": config.email\n      },\n      \"name\":obj['2name']});\n"
        }
      },
      {
        "name": "errorNotice",
        "type": "script",
        "properties": {
          "body": "notify.email(config.email, 'Bulk Job Failed');\ndone(true);"
        }
      },
      {
        "onSuccess": [
          "putBody"
        ],
        "onFailure": [
          "retry-formula"
        ],
        "name": "fileStream",
        "type": "elementRequestStream",
        "properties": {
          "downloadMethod": "GET",
          "downloadApi": "/hubs/crm/bulk/${trigger.args.id}/Contact",
          "uploadApi": "/hubs/social/bulk/authors",
          "uploadElementInstanceId": "${config.lithiumlsw.instance.id}",
          "downloadElementInstanceId": "${config.sfdc.instance.id}",
          "downloadHeaders": "${steps.buildStreamHeaders}",
          "uploadMethod": "POST"
        }
      },
      {
        "onSuccess": [
          "buildStreamHeaders"
        ],
        "onFailure": [
          "putBody-retry"
        ],
        "name": "filterStatus",
        "type": "filter",
        "properties": {
          "body": "if(trigger.args.status == 'COMPLETED'){\n  done(true);\n}\nelse{\n  done(false);\n}"
        }
      },
      {
        "onSuccess": [
          "returnId"
        ],
        "onFailure": [
          "errorNotice"
        ],
        "name": "getFormulaInstance",
        "type": "request",
        "properties": {
          "api": "/formulas/instances",
          "retryAttempts": "5",
          "retryDelay": "500",
          "retry": "true",
          "method": "GET"
        }
      },
      {
        "onSuccess": [
          "putConfigs"
        ],
        "name": "putBody",
        "type": "script",
        "properties": {
          "body": "var obj = steps.returnId;\nvar name = obj['name'];\n\ndone({\"active\" : obj.active,\n      \"configuration\": {\n      \"canrun\": \"yes\",\n      \"lastruntime\": obj.endtime,\n      \"formulainstanceid\": obj.formulainstanceid,\n      \"endtime\": \"none\",\n      \"sfdc.instance.id\": obj.sfdcinstanceid,\n      \"email\": config.email\n      },\n      \"name\":name});"
        }
      },
      {
        "onSuccess": [
          "counter-filter"
        ],
        "name": "putBody-retry",
        "type": "script",
        "properties": {
          "body": "var obj = steps.returnId;\n\ndone({\"active\" : obj.active,\n      \"configuration\": {\n      \"canrun\": \"yes\",\n      \"lastruntime\": obj.lastruntime,\n      \"formulainstanceid\": obj.formulainstanceid,\n      \"endtime\": obj.endtime,\n      \"sfdc.instance.id\": obj.sfdcinstanceid,\n      \"email\":config.email\n      },\n      \"name\":obj.name});"
        }
      },
      {
        "onSuccess": [
          "counter-to-zero-body"
        ],
        "onFailure": [
          "errorNotice"
        ],
        "name": "putConfigs",
        "type": "request",
        "properties": {
          "api": "/formulas/${steps.returnId.formulaOneId}/instances/${steps.returnId.formulainstanceid}",
          "retryAttempts": "5",
          "body": "${steps.putBody}",
          "retryDelay": "500",
          "retry": "true",
          "method": "PUT"
        }
      },
      {
        "onSuccess": [
          "counter-update-body"
        ],
        "onFailure": [
          "errorNotice"
        ],
        "name": "putConfigs-retry",
        "type": "request",
        "properties": {
          "api": "/formulas/${steps.returnId.formulaOneId}/instances/${steps.returnId.formulainstanceid}",
          "retryAttempts": "5",
          "body": "${steps.putBody-retry}",
          "retryDelay": "500",
          "method": "PUT",
          "retry": "true"
        }
      },
      {
        "onFailure": [
          "errorNotice"
        ],
        "name": "put-counter-update",
        "type": "request",
        "properties": {
          "api": "/formulas/${steps.returnId.formulaTwoId}/instances/${steps.returnId.formulaInstance2}",
          "acceptableStatusCodes": "",
          "retryAttempts": "5",
          "body": "${steps.counter-update-body}",
          "retryDelay": "500",
          "retry": "true",
          "method": "PUT"
        }
      },
      {
        "onFailure": [
          "errorNotice"
        ],
        "name": "put-counter-update-clone",
        "type": "request",
        "properties": {
          "api": "/formulas/${steps.returnId.formulaTwoId}/instances/${steps.returnId.formulaInstance2}",
          "acceptableStatusCodes": "",
          "body": "${steps.counter-to-zero-body}",
          "method": "PUT"
        }
      },
      {
        "name": "retry-formula",
        "type": "retryFormulaExecution",
        "properties": {
          "retryAttempts": "3"
        }
      },
      {
        "onSuccess": [
          "filterStatus"
        ],
        "name": "returnId",
        "type": "script",
        "properties": {
          "body": "var arr = steps.getFormulaInstance.response.body;\nvar formulaInstance2;\nvar formulaTwoId;\nvar lithiuminstanceid;\nvar formula2name;\nvar formula2active;\n\nfor(var j=0; j<arr.length; j++){\n  if(arr[j].formula.name.includes('bulk2sfdc')){\n    formulaInstance2 = arr[j].id;\n    formulaTwoId = arr[j].formula.id;\n    lithiuminstanceid = arr[j].configuration['lithiumlsw.instance.id'];\n    formula2name = arr[j].name;\n    formula2active = arr[j].active;\n  }\n}\n\nfor(var i=0; i<arr.length; i++){\n  if(arr[i].formula.name.includes('bulk1sfdc')){\n    config.formulainstanceid = arr[i].id;\n    done({\"lithiuminstanceid\": lithiuminstanceid, \"formulaInstance2\": formulaInstance2, \"formulaTwoId\": formulaTwoId, \"lastruntime\": arr[i].configuration.lastruntime, \"sfdcinstanceid\" : arr[i].configuration['sfdc.instance.id'], \"canrun\" : arr[i].configuration.canrun, \"endtime\": arr[i].configuration.endtime, \"formulainstanceid\" : arr[i].id, \"formulaOneId\" : arr[i].formula.id, \"active\":arr[i].active, \"name\":arr[i].name, \"2active\": formula2active,\"2name\":formula2name});\n  }\n}\n\n"
        }
      }
    ],
    "triggers": [
      {
        "onSuccess": [
          "getFormulaInstance"
        ],
        "type": "manual",
        "name": "trigger"
      }
    ],
    "engine": "v3",
    "configuration": [
      {
        "key": "counter",
        "name": "counter",
        "type": "value",
        "required": true
      },
      {
        "key": "email",
        "name": "email",
        "type": "value",
        "required": true
      },
      {
        "key": "lithiumlsw.instance.id",
        "name": "lithiumlsw.instance.id",
        "type": "elementInstance",
        "required": true
      },
      {
        "key": "sfdc.instance.id",
        "name": "sfdc.instance.id",
        "type": "elementInstance",
        "required": true
      }
    ]
  }