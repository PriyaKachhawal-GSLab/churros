{
  "bulkUploadEnabled": false,
  "image": "http://developers.cloud-elements.com/assets/img/default-ce-logo-element-builder.png",
  "private": true,
  "configuration": [
    {
      "internal": false,
      "companyConfig": false,
      "defaultValue": "0",
      "displayOrder": 1,
      "active": true,
      "description": "No Endpoint Pagination Start Index",
      "type": "TEXTFIELD_32",
      "resellerConfig": false,
      "required": false,
      "hideFromConsole": true,
      "name": "Pagination Start Index",
      "groupControl": false,
      "key": "pagination.page.startindex"
    },
    {
      "internal": false,
      "companyConfig": false,
      "defaultValue": "100",
      "displayOrder": 1,
      "active": true,
      "description": "No Endpoint Max Page Size (or limit)",
      "type": "TEXTFIELD_32",
      "resellerConfig": false,
      "required": false,
      "hideFromConsole": true,
      "name": "Max Page Size (or limit)",
      "groupControl": false,
      "key": "pagination.max"
    },
    {
      "internal": false,
      "companyConfig": false,
      "defaultValue": "page",
      "displayOrder": 1,
      "active": true,
      "description": "No Endpoint Pagination Type",
      "type": "TEXTFIELD_32",
      "resellerConfig": false,
      "required": false,
      "hideFromConsole": true,
      "name": "Pagination Type",
      "groupControl": false,
      "key": "pagination.type"
    },
    {
      "internal": false,
      "companyConfig": false,
      "defaultValue": "https://noendpoint.com",
      "displayOrder": 1,
      "active": true,
      "description": "No Endpoint Base URL",
      "type": "TEXTFIELD_1000",
      "resellerConfig": false,
      "required": false,
      "hideFromConsole": true,
      "name": "Base URL",
      "groupControl": false,
      "key": "base.url"
    },
    {
      "internal": false,
      "companyConfig": false,
      "defaultValue": "",
      "displayOrder": 2,
      "active": true,
      "description": "No Endpoint Username",
      "type": "TEXTFIELD_32",
      "resellerConfig": false,
      "required": true,
      "hideFromConsole": false,
      "name": "Username",
      "groupControl": false,
      "key": "username"
    },
    {
      "internal": false,
      "companyConfig": false,
      "defaultValue": "",
      "displayOrder": 3,
      "active": true,
      "description": "No Endpoint Password",
      "type": "PASSWORD",
      "resellerConfig": false,
      "required": true,
      "hideFromConsole": false,
      "name": "Password",
      "groupControl": false,
      "key": "password"
    },
    {
      "internal": true,
      "companyConfig": false,
      "defaultValue": "polling",
      "displayOrder": 100,
      "active": true,
      "description": "Event Type",
      "type": "TEXTFIELD_128",
      "resellerConfig": false,
      "required": false,
      "hideFromConsole": true,
      "name": "Event Type",
      "groupControl": false,
      "key": "event.vendor.type"
    },
    {
      "internal": false,
      "companyConfig": false,
      "defaultValue": "15",
      "displayOrder": 101,
      "active": true,
      "description": "Set time interval for polling application (in minutes)",
      "type": "TEXTFIELD_128",
      "resellerConfig": false,
      "required": false,
      "hideFromConsole": false,
      "name": "Event poller refresh interval",
      "groupControl": false,
      "key": "event.poller.refresh_interval"
    },
    {
      "internal": false,
      "companyConfig": false,
      "defaultValue": "false",
      "displayOrder": 102,
      "active": true,
      "description": "Enable/Disable Event Notification",
      "type": "BOOLEAN",
      "resellerConfig": false,
      "required": false,
      "hideFromConsole": false,
      "name": "Event Notifications Enabled",
      "groupControl": false,
      "key": "event.notification.enabled"
    },
    {
      "internal": false,
      "hideFromConsole": false,
      "companyConfig": false,
      "displayOrder": 103,
      "name": "Event Notification Callback URL",
      "active": true,
      "description": "Event Notification Callback URL",
      "type": "TEXTFIELD_1000",
      "groupControl": false,
      "resellerConfig": false,
      "key": "event.notification.callback.url",
      "required": false
    },
    {
      "internal": false,
      "companyConfig": false,
      "defaultValue": "{\"contacts\":{\"url\":\"/hubs/crm/contacts?where=date_updated>'${gmtDate:yyyy-MM-dd'T'HH:mm:ss.SSSSSSXXX}'\",\"idField\":\"id\",\"datesConfiguration\":{\"updatedDateField\":\"date_updated\",\"updatedDateFormat\":\"yyyy-MM-dd'T'HH:mm:ss.SSSSSSXXX\",\"createdDateField\":\"date_created\",\"createdDateFormat\":\"yyyy-MM-dd'T'HH:mm:ss.SSSSSSXXX\"}}}",
      "displayOrder": 104,
      "active": true,
      "description": "Event Poller Resources Configuration. The configuration is defined via JSON, an example of which is as follows - { \"contacts\": { \"url\": \"/hubs/helpdesk/contacts\", “idField”: “user.id”, “datesConfiguration”: { \"updatedDateField\": \"user.updated_at\", \"updatedDateFormat\": \"yyyy-MM-dd'T'HH:mm:ssX\", “createdDateField”: “user.created_at”, “createdDateFormat\": \"yyyy-MM-dd'T'HH:mm:ssX\" }, \"pageSize\": 10000 } }",
      "type": "TEXTAREA",
      "resellerConfig": false,
      "required": false,
      "hideFromConsole": false,
      "name": "Event Poller Resources Configuration",
      "groupControl": false,
      "key": "event.poller.configuration"
    }
  ],
  "active": true,
  "description": "This Element has no endpoint, handling all the magic in pre/post hooks",
  "resources": [
    {
      "nextPageKey": "",
      "path": "/hubs/general/firstrequest",
      "paginationType": "VENDOR_SUPPORTED",
      "vendorMethod": "GET",
      "method": "GET",
      "nextResource": "GET:/secondrequest",
      "response": {
        "contentType": "application/json"
      },
      "description": "First API Request",
      "model": {
        "transform": false,
        "name": "firstrequest",
        "rawSwagger": {
          "firstrequest": {
            "id": "firstrequest",
            "properties": {
              "description": {
                "type": "string"
              },
              "id": {
                "format": "int32",
                "type": "integer"
              }
            }
          }
        },
        "swagger": {
          "firstrequest": {
            "id": "firstrequest",
            "properties": {
              "description": {
                "type": "string"
              },
              "id": {
                "format": "int32",
                "type": "integer"
              }
            }
          }
        }
      },
      "type": "api",
      "hooks": [
        {
          "isLegacy": false,
          "mimeType": "application/javascript",
          "body": "done ({\n\"continue\": false\n})",
          "type": "preRequest"
        },
        {
          "isLegacy": false,
          "mimeType": "application/javascript",
          "body": "var response = {\n\t\"id\": 123\n};\n\ndone ({\n\t\"response_body\": response\n})",
          "type": "postRequest"
        }
      ],
      "vendorPath": ""
    },
    {
      "method": "GET",
      "nextResource": "",
      "description": "Second API Request which adds description",
      "type": "apiNoDocumentation",
      "vendorPath": "",
      "nextPageKey": "",
      "path": "/hubs/general/four",
      "paginationType": "VENDOR_SUPPORTED",
      "vendorMethod": "GET",
      "response": {
        "contentType": "application/json"
      },
      "operationId": "",
      "hooks": [
        {
          "isLegacy": false,
          "mimeType": "application/javascript",
          "body": "done ({\n\"continue\": false\n})",
          "type": "preRequest"
        },
        {
          "isLegacy": false,
          "mimeType": "application/javascript",
          "body": "var response = {\n\t\"id\": \"request_previous_response.id\",\n\t\"description\": \"From second request\"\n};\n\ndone ({\n\t\"response_body\": response\n})",
          "type": "postRequest"
        }
      ],
      "rootKey": ""
    },
    {
      "method": "GET",
      "nextResource": "",
      "description": "Http request Test",
      "type": "api",
      "vendorPath": "",
      "nextPageKey": "",
      "path": "/hubs/general/httprequest",
      "paginationType": "VENDOR_SUPPORTED",
      "vendorMethod": "GET",
      "response": {
        "contentType": "application/json"
      },
      "operationId": "",
      "model": {
        "transform": false,
        "name": "httprequest",
        "rawSwagger": {
          "httprequest": {
            "id": "httprequest",
            "properties": {
              "1": {
                "format": "int32",
                "type": "integer"
              },
              "9": {
                "format": "int32",
                "type": "integer"
              },
              "99": {
                "format": "int32",
                "type": "integer"
              },
              "dfgfghfg": {
                "format": "int32",
                "type": "integer"
              },
              "Done": {
                "format": "int32",
                "type": "integer"
              },
              "ullamco ut": {
                "format": "int32",
                "type": "integer"
              },
              "unavailable": {
                "format": "int32",
                "type": "integer"
              },
              "stud": {
                "format": "int32",
                "type": "integer"
              },
              "pending": {
                "format": "int32",
                "type": "integer"
              },
              "available": {
                "format": "int32",
                "type": "integer"
              },
              "dangerous": {
                "format": "int32",
                "type": "integer"
              },
              "fulfilled": {
                "format": "int32",
                "type": "integer"
              },
              "asdasd": {
                "format": "int32",
                "type": "integer"
              },
              "dead": {
                "format": "int32",
                "type": "integer"
              },
              "adasdsad": {
                "format": "int32",
                "type": "integer"
              },
              "confused": {
                "format": "int32",
                "type": "integer"
              },
              "my pet status": {
                "format": "int32",
                "type": "integer"
              },
              "scscsc": {
                "format": "int32",
                "type": "integer"
              },
              "not available": {
                "format": "int32",
                "type": "integer"
              },
              "cuty": {
                "format": "int32",
                "type": "integer"
              },
              "no more": {
                "format": "int32",
                "type": "integer"
              },
              "Available": {
                "format": "int32",
                "type": "integer"
              },
              "loco": {
                "format": "int32",
                "type": "integer"
              },
              "ww": {
                "format": "int32",
                "type": "integer"
              },
              "sold": {
                "format": "int32",
                "type": "integer"
              },
              "consequat non in": {
                "format": "int32",
                "type": "integer"
              },
              "nostrud velit laborum pariatur sunt": {
                "format": "int32",
                "type": "integer"
              },
              "test": {
                "format": "int32",
                "type": "integer"
              },
              "sint": {
                "format": "int32",
                "type": "integer"
              },
              "Alive": {
                "format": "int32",
                "type": "integer"
              },
              "gone": {
                "format": "int32",
                "type": "integer"
              },
              "undesirable": {
                "format": "int32",
                "type": "integer"
              },
              "Active": {
                "format": "int32",
                "type": "integer"
              },
              "tests": {
                "format": "int32",
                "type": "integer"
              },
              "u": {
                "format": "int32",
                "type": "integer"
              },
              "unavaiable": {
                "format": "int32",
                "type": "integer"
              },
              "string_": {
                "format": "int32",
                "type": "integer"
              },
              "Good": {
                "format": "int32",
                "type": "integer"
              },
              "dog": {
                "format": "int32",
                "type": "integer"
              },
              "fgghfgh": {
                "format": "int32",
                "type": "integer"
              }
            }
          }
        },
        "swagger": {
          "httprequest": {
            "id": "httprequest",
            "properties": {
              "1": {
                "format": "int32",
                "type": "integer"
              },
              "9": {
                "format": "int32",
                "type": "integer"
              },
              "99": {
                "format": "int32",
                "type": "integer"
              },
              "dfgfghfg": {
                "format": "int32",
                "type": "integer"
              },
              "Done": {
                "format": "int32",
                "type": "integer"
              },
              "ullamco ut": {
                "format": "int32",
                "type": "integer"
              },
              "unavailable": {
                "format": "int32",
                "type": "integer"
              },
              "stud": {
                "format": "int32",
                "type": "integer"
              },
              "pending": {
                "format": "int32",
                "type": "integer"
              },
              "available": {
                "format": "int32",
                "type": "integer"
              },
              "dangerous": {
                "format": "int32",
                "type": "integer"
              },
              "fulfilled": {
                "format": "int32",
                "type": "integer"
              },
              "asdasd": {
                "format": "int32",
                "type": "integer"
              },
              "dead": {
                "format": "int32",
                "type": "integer"
              },
              "adasdsad": {
                "format": "int32",
                "type": "integer"
              },
              "confused": {
                "format": "int32",
                "type": "integer"
              },
              "my pet status": {
                "format": "int32",
                "type": "integer"
              },
              "scscsc": {
                "format": "int32",
                "type": "integer"
              },
              "not available": {
                "format": "int32",
                "type": "integer"
              },
              "cuty": {
                "format": "int32",
                "type": "integer"
              },
              "no more": {
                "format": "int32",
                "type": "integer"
              },
              "Available": {
                "format": "int32",
                "type": "integer"
              },
              "loco": {
                "format": "int32",
                "type": "integer"
              },
              "ww": {
                "format": "int32",
                "type": "integer"
              },
              "sold": {
                "format": "int32",
                "type": "integer"
              },
              "consequat non in": {
                "format": "int32",
                "type": "integer"
              },
              "nostrud velit laborum pariatur sunt": {
                "format": "int32",
                "type": "integer"
              },
              "test": {
                "format": "int32",
                "type": "integer"
              },
              "sint": {
                "format": "int32",
                "type": "integer"
              },
              "Alive": {
                "format": "int32",
                "type": "integer"
              },
              "gone": {
                "format": "int32",
                "type": "integer"
              },
              "undesirable": {
                "format": "int32",
                "type": "integer"
              },
              "Active": {
                "format": "int32",
                "type": "integer"
              },
              "tests": {
                "format": "int32",
                "type": "integer"
              },
              "u": {
                "format": "int32",
                "type": "integer"
              },
              "unavaiable": {
                "format": "int32",
                "type": "integer"
              },
              "string_": {
                "format": "int32",
                "type": "integer"
              },
              "Good": {
                "format": "int32",
                "type": "integer"
              },
              "dog": {
                "format": "int32",
                "type": "integer"
              },
              "fgghfgh": {
                "format": "int32",
                "type": "integer"
              }
            }
          }
        }
      },
      "hooks": [
        {
          "isLegacy": false,
          "mimeType": "application/javascript",
          "body": "done ({\n\"continue\": false\n})",
          "type": "preRequest"
        },
        {
          "isLegacy": false,
          "mimeType": "application/javascript",
          "body": "\nconst http = require('http');\n\n//Call Swagger petstore\nlet options = {\n  hostname: 'petstore.swagger.io',\n  path: '/v2/store/inventory',\n  headers: {\n    'Accept': 'application/json'\n  }\n};\n\nconst apiCall = http.request(options);\napiCall.on('response', res => {\n     console.log('after response');\n     let rawData = '';\n     res.on('data', (chunk) => rawData += chunk);\n     res.on('end', () => {\n       try {\n         let parsedData = JSON.parse(rawData);\n         console.log('Parsed response');\n         done({ \"response_body\": parsedData });\n       } catch (e) {\n         done({ \"response_error\": e.message});\n       }\n     });\n });\n\napiCall.on('error', err => {\n  done({ \"response_error\": err.message});\n});\n\napiCall.end();\n",
          "type": "postRequest"
        }
      ],
      "rootKey": ""
    },
    {
      "method": "GET",
      "nextResource": "",
      "description": "Http request Test",
      "type": "api",
      "vendorPath": "",
      "nextPageKey": "",
      "path": "/hubs/general/httpsrequest",
      "paginationType": "VENDOR_SUPPORTED",
      "vendorMethod": "GET",
      "response": {
        "contentType": "application/json"
      },
      "operationId": "",
      "model": {
        "transform": false,
        "name": "httpsrequest",
        "rawSwagger": {
          "configuration": {
            "id": "configuration",
            "properties": {
              "internal": {
                "type": "boolean"
              },
              "companyConfig": {
                "type": "boolean"
              },
              "defaultValue": {
                "type": "string"
              },
              "displayOrder": {
                "format": "int32",
                "type": "integer"
              },
              "active": {
                "type": "boolean"
              },
              "description": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "resellerConfig": {
                "type": "boolean"
              },
              "required": {
                "type": "boolean"
              },
              "hideFromConsole": {
                "type": "boolean"
              },
              "name": {
                "type": "string"
              },
              "id": {
                "format": "int32",
                "type": "integer"
              },
              "groupControl": {
                "type": "boolean"
              },
              "key": {
                "type": "string"
              }
            }
          },
          "response": {
            "id": "response",
            "properties": {
              "contentType": {
                "type": "string"
              }
            }
          },
          "defaultTransformations": {
            "id": "defaultTransformations",
            "properties": {
              "name": {
                "type": "string"
              },
              "vendorName": {
                "type": "string"
              }
            }
          },
          "resources": {
            "id": "resources",
            "properties": {
              "path": {
                "type": "string"
              },
              "createdDate": {
                "type": "string"
              },
              "vendorMethod": {
                "type": "string"
              },
              "method": {
                "type": "string"
              },
              "response": {
                "type": "response"
              },
              "description": {
                "type": "string"
              },
              "id": {
                "format": "int32",
                "type": "integer"
              },
              "type": {
                "type": "string"
              },
              "parameters": {
                "type": "array",
                "items": {
                  "$ref": "parameters"
                }
              },
              "vendorPath": {
                "type": "string"
              }
            }
          },
          "parameters": {
            "id": "parameters",
            "properties": {
              "vendorType": {
                "type": "string"
              },
              "resourceId": {
                "format": "int32",
                "type": "integer"
              },
              "createdDate": {
                "type": "string"
              },
              "dataType": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "vendorDataType": {
                "type": "string"
              },
              "id": {
                "format": "int32",
                "type": "integer"
              },
              "source": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "vendorName": {
                "type": "string"
              },
              "required": {
                "type": "boolean"
              }
            }
          },
          "httpsrequest": {
            "id": "httpsrequest",
            "properties": {
              "bulkUploadEnabled": {
                "type": "boolean"
              },
              "image": {
                "type": "string"
              },
              "private": {
                "type": "boolean"
              },
              "signupURL": {
                "type": "string"
              },
              "configuration": {
                "type": "array",
                "items": {
                  "$ref": "configuration"
                }
              },
              "active": {
                "type": "boolean"
              },
              "description": {
                "type": "string"
              },
              "resources": {
                "type": "array",
                "items": {
                  "$ref": "resources"
                }
              },
              "protocolType": {
                "type": "string"
              },
              "cloneable": {
                "type": "boolean"
              },
              "hookName": {
                "type": "string"
              },
              "transformationsEnabled": {
                "type": "boolean"
              },
              "bulkDownloadEnabled": {
                "type": "boolean"
              },
              "deleted": {
                "type": "boolean"
              },
              "hub": {
                "type": "string"
              },
              "configDescription": {
                "type": "string"
              },
              "typeOauth": {
                "type": "boolean"
              },
              "defaultTransformations": {
                "type": "array",
                "items": {
                  "$ref": "defaultTransformations"
                }
              },
              "name": {
                "type": "string"
              },
              "trialAccount": {
                "type": "boolean"
              },
              "id": {
                "format": "int32",
                "type": "integer"
              },
              "beta": {
                "type": "boolean"
              },
              "key": {
                "type": "string"
              },
              "authentication": {
                "type": "authentication"
              }
            }
          },
          "authentication": {
            "id": "authentication",
            "properties": {
              "type": {
                "type": "string"
              }
            }
          }
        },
        "swagger": {
          "configuration": {
            "id": "configuration",
            "properties": {
              "internal": {
                "type": "boolean"
              },
              "companyConfig": {
                "type": "boolean"
              },
              "defaultValue": {
                "type": "string"
              },
              "displayOrder": {
                "format": "int32",
                "type": "integer"
              },
              "active": {
                "type": "boolean"
              },
              "description": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "resellerConfig": {
                "type": "boolean"
              },
              "required": {
                "type": "boolean"
              },
              "hideFromConsole": {
                "type": "boolean"
              },
              "name": {
                "type": "string"
              },
              "id": {
                "format": "int32",
                "type": "integer"
              },
              "groupControl": {
                "type": "boolean"
              },
              "key": {
                "type": "string"
              }
            }
          },
          "response": {
            "id": "response",
            "properties": {
              "contentType": {
                "type": "string"
              }
            }
          },
          "defaultTransformations": {
            "id": "defaultTransformations",
            "properties": {
              "name": {
                "type": "string"
              },
              "vendorName": {
                "type": "string"
              }
            }
          },
          "resources": {
            "id": "resources",
            "properties": {
              "path": {
                "type": "string"
              },
              "createdDate": {
                "type": "string"
              },
              "vendorMethod": {
                "type": "string"
              },
              "method": {
                "type": "string"
              },
              "response": {
                "type": "response"
              },
              "description": {
                "type": "string"
              },
              "id": {
                "format": "int32",
                "type": "integer"
              },
              "type": {
                "type": "string"
              },
              "parameters": {
                "type": "array",
                "items": {
                  "$ref": "parameters"
                }
              },
              "vendorPath": {
                "type": "string"
              }
            }
          },
          "parameters": {
            "id": "parameters",
            "properties": {
              "vendorType": {
                "type": "string"
              },
              "resourceId": {
                "format": "int32",
                "type": "integer"
              },
              "createdDate": {
                "type": "string"
              },
              "dataType": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "vendorDataType": {
                "type": "string"
              },
              "id": {
                "format": "int32",
                "type": "integer"
              },
              "source": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "vendorName": {
                "type": "string"
              },
              "required": {
                "type": "boolean"
              }
            }
          },
          "httpsrequest": {
            "id": "httpsrequest",
            "properties": {
              "bulkUploadEnabled": {
                "type": "boolean"
              },
              "image": {
                "type": "string"
              },
              "private": {
                "type": "boolean"
              },
              "signupURL": {
                "type": "string"
              },
              "configuration": {
                "type": "array",
                "items": {
                  "$ref": "configuration"
                }
              },
              "active": {
                "type": "boolean"
              },
              "description": {
                "type": "string"
              },
              "resources": {
                "type": "array",
                "items": {
                  "$ref": "resources"
                }
              },
              "protocolType": {
                "type": "string"
              },
              "cloneable": {
                "type": "boolean"
              },
              "hookName": {
                "type": "string"
              },
              "transformationsEnabled": {
                "type": "boolean"
              },
              "bulkDownloadEnabled": {
                "type": "boolean"
              },
              "deleted": {
                "type": "boolean"
              },
              "hub": {
                "type": "string"
              },
              "configDescription": {
                "type": "string"
              },
              "typeOauth": {
                "type": "boolean"
              },
              "defaultTransformations": {
                "type": "array",
                "items": {
                  "$ref": "defaultTransformations"
                }
              },
              "name": {
                "type": "string"
              },
              "trialAccount": {
                "type": "boolean"
              },
              "id": {
                "format": "int32",
                "type": "integer"
              },
              "beta": {
                "type": "boolean"
              },
              "key": {
                "type": "string"
              },
              "authentication": {
                "type": "authentication"
              }
            }
          },
          "authentication": {
            "id": "authentication",
            "properties": {
              "type": {
                "type": "string"
              }
            }
          }
        }
      },
      "hooks": [
        {
          "isLegacy": false,
          "mimeType": "application/javascript",
          "body": "done ({\n\"continue\": false\n})",
          "type": "preRequest"
        },
        {
          "isLegacy": false,
          "mimeType": "application/javascript",
          "body": "var response;\nconst https = require('https');\n//Get SFDC element fromm CE and return the results\nhttps.get('https://api.cloud-elements.com/elements/api-v2/elements/sfdc', (res) => {\n\tconsole.log('after response');\n\t  let rawData = '';\n\t  res.on('data', (chunk) => rawData += chunk);\n\t  res.on('end', () => {\n\t    try {\n\t      let parsedData = JSON.parse(rawData);\n\t      done({ \"response_body\": parsedData });\n\t    } catch (e) {\n\t      console.log(e.message);\n\t      done({ \"response_error\": e.message});\n\t    }\n\t  });\n});\n",
          "type": "postRequest"
        }
      ],
      "rootKey": ""
    },
    {
      "nextPageKey": "",
      "path": "/hubs/general/one",
      "paginationType": "VENDOR_SUPPORTED",
      "vendorMethod": "GET",
      "method": "GET",
      "nextResource": "GET:/two",
      "response": {
        "contentType": "application/json"
      },
      "description": "First API Request",
      "model": {
        "transform": false,
        "name": "one",
        "rawSwagger": {
          "one": {
            "id": "one",
            "properties": {
              "description": {
                "type": "string"
              },
              "id": {
                "type": "string"
              }
            }
          }
        },
        "swagger": {
          "one": {
            "id": "one",
            "properties": {
              "description": {
                "type": "string"
              },
              "id": {
                "type": "string"
              }
            }
          }
        }
      },
      "type": "api",
      "hooks": [
        {
          "isLegacy": false,
          "mimeType": "application/javascript",
          "body": "done ({\n\"continue\": false\n})",
          "type": "preRequest"
        },
        {
          "isLegacy": false,
          "mimeType": "application/javascript",
          "body": "var response = {\n\t\"id\": 123\n};\n\ndone ({\n\t\"response_body\": response\n})",
          "type": "postRequest"
        }
      ],
      "vendorPath": ""
    },
    {
      "nextPageKey": "",
      "path": "/hubs/general/secondrequest",
      "paginationType": "VENDOR_SUPPORTED",
      "vendorMethod": "GET",
      "method": "GET",
      "nextResource": "",
      "response": {
        "contentType": "application/json"
      },
      "description": "Second API Request which adds description",
      "type": "apiNoDocumentation",
      "hooks": [
        {
          "isLegacy": false,
          "mimeType": "application/javascript",
          "body": "done ({\n\"continue\": false\n})",
          "type": "preRequest"
        },
        {
          "isLegacy": false,
          "mimeType": "application/javascript",
          "body": "var response = {\n\t\"id\": request_previous_response.id,\n\t\"description\": \"From second request\"\n};\n\ndone ({\n\t\"response_body\": response\n})",
          "type": "postRequest"
        }
      ],
      "vendorPath": ""
    },
    {
      "nextPageKey": "",
      "path": "/hubs/general/three",
      "paginationType": "VENDOR_SUPPORTED",
      "vendorMethod": "GET",
      "method": "GET",
      "nextResource": "GET:/four",
      "response": {
        "contentType": "application/json"
      },
      "description": "Second API Request which adds description",
      "type": "apiNoDocumentation",
      "hooks": [
        {
          "isLegacy": false,
          "mimeType": "application/javascript",
          "body": "done ({\n\"continue\": false\n})",
          "type": "preRequest"
        },
        {
          "isLegacy": false,
          "mimeType": "application/javascript",
          "body": "var response = {\n\t\"id\": \"request_previous_response.id\",\n\t\"description\": \"From second request\"\n};\n\ndone ({\n\t\"response_body\": response\n})",
          "type": "postRequest"
        }
      ],
      "vendorPath": ""
    },
    {
      "nextPageKey": "",
      "path": "/hubs/general/two",
      "paginationType": "VENDOR_SUPPORTED",
      "vendorMethod": "GET",
      "method": "GET",
      "nextResource": "GET:/three",
      "response": {
        "contentType": "application/json"
      },
      "description": "Second API Request which adds description",
      "type": "apiNoDocumentation",
      "hooks": [
        {
          "isLegacy": false,
          "mimeType": "application/javascript",
          "body": "done ({\n\"continue\": false\n})",
          "type": "preRequest"
        },
        {
          "isLegacy": false,
          "mimeType": "application/javascript",
          "body": "var response = {\n\t\"id\": \"request_previous_response.id\",\n\t\"description\": \"From second request\"\n};\n\ndone ({\n\t\"response_body\": response\n})",
          "type": "postRequest"
        }
      ],
      "vendorPath": ""
    }
  ],
  "protocolType": "http",
  "cloneable": true,
  "transformationsEnabled": true,
  "bulkDownloadEnabled": false,
  "deleted": false,
  "hub": "general",
  "typeOauth": false,
  "name": "No Endpoint",
  "trialAccount": false,
  "hooks": [
    {
      "isLegacy": false,
      "mimeType": "application/javascript",
      "body": "var isPolling = false;\nif (events.eventId && events.objectType) {\n\tvar isPolling = true;\n}\n\nif (isPolling) {\n\tvar providerEvents = [];\n\tvar objectType = events.objectType;\n\tvar objects = Java.from(events[objectType]);\n\tobjects.forEach(function(object) {\n\t\tvar providerEvent = {};\n\t\tvar ISODateTimeFormat = Java.type('org.joda.time.format.ISODateTimeFormat');\n\t\tvar addTime = new Date(ISODateTimeFormat.dateTime().parseDateTime(object.date_created).toString());\n\t\tvar updateTime = new Date(ISODateTimeFormat.dateTime().parseDateTime(object.date_updated).toString());\n\t\tproviderEvent.event_object_type = objectType;\n\t\tproviderEvent.event_date = updateTime.toISOString();\n\t\tproviderEvent.event_object_id = object.id;\n\t\tproviderEvent.event_type = addTime - updateTime < 0 ? 'UPDATED' : 'CREATED';\n\t\tproviderEvents.push(providerEvent);\n\t});\n\treturn {\n\t\t\"events\": providerEvents\n\t};\n}\n\nvar eventObject = {};\nvar type = events.event;\neventObject.event_date = events.data.date_updated;\neventObject.event_object_id = events.data.id;\neventObject.event_object_type = 'leads';\neventObject.event_type = determineEventType(type);\n\nif (events.data.source_id) {\n\teventObject.event_old_path = events.data.source_id;\n\teventObject.event_object_id = events.data.source_id;\n}\n\nif (events.data.destination_id) {\n\teventObject.event_new_path = events.data.destination_id;\n}\n\nfunction determineEventType(eventTypeString) {\n\tswitch (eventTypeString) {\n\t\tcase 'update':\n\t\t\treturn 'UPDATED';\n\t\tcase 'create':\n\t\t\treturn 'CREATED';\n\t\tcase 'delete':\n\t\t\treturn 'DELETED';\n\t\tcase 'merge':\n\t\t\treturn 'UPDATED';\n\t\tdefault:\n\t\t\treturn 'UNKNOWN';\n\t}\n}\n\nreturn {\n\t\"events\": [eventObject]\n}",
      "type": "event"
    }
  ],
  "parameters": [],
  "beta": false,
  "key": "noendpoint",
  "authentication": {
    "type": "basic"
  }
}
